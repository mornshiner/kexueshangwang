######### 锚点 start #######
# 策略组相关
#pr: &pr {type: select, proxies: [自定义添加，意思不大]}
#这里是订阅更新和延迟测试相关的
p: &p {type: http, interval: 3600, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 300}}
######### 锚点 end #######
##自定义的代理节点(出站代理)
proxies:
- name: JP_BWG_Hy2
  type: hysteria2
  server: 
  port: 
  password: 
  alpn:
  - h3
  protocol: udp
  up: 60 Mbps
  down: 500 Mbps
  sni: 
  skip-cert-verify: false
##通过订阅获取的节点集合(代理集合)
# url 里填写自己的订阅,名称不能重复
proxy-providers:
  cherry:
    <<: *p
    url: ""
##为不同分流策略定义相应的代理节点组（代理组）
##&用来定义锚点， *用来引用，比如下面的&pr和*pr，跟宏的作用差不多
##<<表示合并到当前数据
##use:引入代理集合
##include-all:引入所有出站代理以及代理集合，顺序将按照名称排序
##include-all-proxies：引入所有出站代理，顺序将按照名称排序
##include-all-providers：引入所有代理集合，顺序将按照名称排序
proxy-groups:
#- {name: 默认, type: fallback, interval: 300, proxies: [JP_BWG_Hy2, 自动选择]}
- {name: 全部节点, type: select, include-all-providers: true}
- {name: 自动选择, type: url-test, include-all-providers: true, tolerance: 10}
- {name: 香港自动选择,type: url-test, include-all-providers: true, filter: "(?i)港|hk|hongkong|hong kong"}
- {name: 台湾自动选择,type: url-test, include-all-providers: true, filter: "(?i)台|tw|taiwan"}
- {name: 日本自动选择,type: url-test, include-all-providers: true, filter: "(?i)日|jp|japan"}
- {name: 美国自动选择,type: url-test, include-all-providers: true, filter: "(?i)美|us|unitedstates|united states"}
- {name: 新加坡自动选择,type: url-test, include-all-providers: true, filter: "(?i)(新|sg|singapore)"}
- {name: 其它地区自动选择, type: url-test, include-all-providers: true, filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates)).*"}
##自定义分流规则
rules:
##- RULE-SET,UnBan,DIRECT
##- RULE-SET,BanAD,REJECT
##- RULE-SET,BanProgramAD,REJECT
##- DOMAIN,自建域名,DIRECT
- DOMAIN-SUFFIX,xn--ngstr-lra8j.com,DIRECT
- GEOSITE,category-ads-all,REJECT
- GEOIP,private,DIRECT,no-resolve
- RULE-SET,OpenAI_domain,新加坡自动选择
- RULE-SET,ChinaMedia,DIRECT
- RULE-SET,cn_domain,DIRECT
- RULE-SET,cn_ip,DIRECT,no-resolve
##- GEOIP,CN,DIRECT,no-resolve
- MATCH,香港自动选择
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: text}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: text}
rule-providers:
  private:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.list"
  ChinaMedia:
    <<: *domain
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaMedia.list"  
  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.list"
  OpenAI_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.list"
  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.list"
  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.list"
